#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <21>; };

/ {
    behaviors {
        // Generic hold-tap: we supply tap+hold at call-site

        hm_lctl: hm_lctl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LCTL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_lalt: hm_lalt {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LALT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_lgui: hm_lgui {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LGUI";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_lsft: hm_lsft {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LSFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_rctl: hm_rctl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RCTL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_ralt: hm_ralt {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RALT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_rgui: hm_rgui {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RGUI";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };

        hm_rsft: hm_rsft {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RSFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp &kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB  &kp Q            &kp W            &kp E             &kp R             &kp T        &kp Y    &kp U             &kp I             &kp O            &kp P               &kp BSPC
&kp ESC  &hm_lgui LGUI A  &hm_lalt LALT S  &hm_lctl LCTRL D  &hm_lsft LSHFT F  &kp G        &kp H    &hm_rsft RSHFT J  &hm_rctl RCTRL K  &hm_ralt RALT L  &hm_rgui RGUI SEMI  &kp SQT
&kp TAB  &kp Z            &kp X            &kp C             &kp V             &kp B        &kp N    &kp M             &kp COMMA         &kp DOT          &kp FSLH            &kp GRAVE
                                           &mo 4             &mo 2             &kp SPACE    &kp RET  &mo 1             &mo 3
            >;
        };

        number_layer {
            display-name = "Number Layer";

            // (unchanged)

            bindings = <
&kp TAB   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&kp CAPS  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans    &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                          &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        symbol_layer {
            display-name = "Symbol Layer";

            // (unchanged)

            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans   &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans   &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                           &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse Layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
                        &trans  &trans  &mkp LCLK    &mkp RCLK       &trans          &trans
            >;
        };

        fn_layer {
            bindings = <
&kp LS(F11)        &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)    &trans  &trans  &trans           &trans           &rgb_ug RGB_EFR  &rgb_ug RGB_EFF
&kp C_VOLUME_UP    &trans      &trans      &trans      &trans      &trans        &trans  &trans  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &bt BT_PRV       &bt BT_NXT
&kp C_VOLUME_DOWN  &trans      &trans      &trans      &trans      &trans        &trans  &trans  &trans           &trans           &bt BT_CLR       &bt BT_CLR_ALL
                                           &trans      &trans      &trans        &trans  &trans  &trans
            >;
        };
    };
};
